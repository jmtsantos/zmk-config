/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define MAC 0
#define MLCK 1
#define LUP  2
#define LDWN 3
#define WLCK 4
#define WLYR 5
#define BT 6

/*
  Uncomment this block if using RGB
 */

&led_strip {
    // chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs

    chain-length = <29>; // Uncomment if using only per-key LEDs.
};

/ {
    macros {
        btmac0: btmac0 {
            compatible = "zmk,behavior-macro";
            label = "BTMAC0";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0>;
        };

        btwin1: btwin1 {
            compatible = "zmk,behavior-macro";
            label = "BTWIN1";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 0>;
        };

        bt2: bt2 {
            compatible = "zmk,behavior-macro";
            label = "BT2";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &to 0>;
        };

        bt3: bt3 {
            compatible = "zmk,behavior-macro";
            label = "BT3";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &to 0>;
        };

        bt4: bt4 {
            compatible = "zmk,behavior-macro";
            label = "BT4";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &to 0>;
        };
    };

    behaviors {
        RPAR_TD_RBKT: RPAR_TD_RBKT {
            compatible = "zmk,behavior-tap-dance";
            label = "RPAR_TD_RBKT";
            #binding-cells = <0>;
            bindings = <&kp RPAR>, <&kp RBKT>;
        };

        LPAR_TD_LBKT: LPAR_TD_LBKT {
            compatible = "zmk,behavior-tap-dance";
            label = "LPAR_TD_LBKT";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp LBKT>;
        };

        LCB_TD_LT: LCB_TD_LT {
            compatible = "zmk,behavior-tap-dance";
            label = "LCB_TD_LT";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp LT>;
        };

        RCB_TD_BT: RCB_TD_BT {
            compatible = "zmk,behavior-tap-dance";
            label = "RCB_TD_BT";
            #binding-cells = <0>;
            bindings = <&kp RBRC>, <&kp GT>;
        };

        QUOTES_TD: QUOTES_TD {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTES_TD";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  CLAY |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |

            bindings = <
&kp ESCAPE    &kp N1  &kp N2  &kp N3     &kp N4        &kp N5                        &kp N6  &kp N7         &kp N8           &kp N9   &kp N0    &kp BSPC
&kp TAB       &kp Q   &kp W   &kp E      &kp R         &kp T                         &kp Y   &kp U          &kp I            &kp O    &kp P     &kp MINUS
&kp LEFT_ALT  &kp A   &kp S   &kp D      &kp F         &kp G                         &kp H   &kp J          &kp K            &kp L    &kp SEMI  &kp SINGLE_QUOTE
&kp LSHFT     &kp Z   &kp X   &kp C      &kp V         &kp B   &none        &none    &kp N   &kp M          &kp COMMA        &kp DOT  &kp FSLH  &kp GRAVE
                      &mo 0   &kp LCTRL  &kp LEFT_GUI  &mo 1   &kp SPACE    &kp RET  &mo 2   &kp RIGHT_ALT  &kp RIGHT_SHIFT  &mo 3
            >;

            label = "DEF";
        };

        fuction_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                     &none     &kp K_VOLUME_UP  &kp K_VOLUME_DOWN  &kp K_MUTE  &kp K_NEXT  &kp DELETE
&trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10                    &none     &none            &none              &none       &none       &none
&trans  &none   &none   &none   &none   &none                      &kp LEFT  &kp DOWN         &kp UP             &kp RIGHT   &trans      &trans
&trans  &none   &none   &none   &none   &none    &trans    &trans  &trans    &trans           &trans             &trans      &trans      &trans
                &trans  &trans  &trans  &trans   &trans    &trans  &trans    &trans           &trans             &trans
            >;

            label = "func";
        };

        win_capslock_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans       &trans  &trans  &trans  &trans  &trans                             &kp PRINTSCREEN  &kp INSERT  &kp HOME  &kp PAGE_UP    &kp LEFT_BRACKET   &kp DELETE
&kp LS(TAB)  &trans  &trans  &trans  &trans  &trans                             &none            &kp DELETE  &kp END   &kp PAGE_DOWN  &kp RIGHT_BRACKET  &kp EQUAL
&trans       &trans  &trans  &trans  &trans  &trans                             &kp LEFT         &kp DOWN    &kp UP    &kp RIGHT      &none              &kp BACKSLASH
&trans       &trans  &trans  &trans  &trans  &kp RC(B)  &trans       &none      &none            &none       &none     &none          &none              &none
                     &trans  &trans  &trans  &trans     &kp SPACE    &kp ENTER  &trans           &trans      &trans    &trans
            >;

            label = "EXTRA";
        };

        BT_layer {
            bindings = <
&trans  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt3             &bt4                      &bt BT_CLR  &trans  &trans  &trans  &trans  &trans
&trans  &bl BL_TOG       &bl BL_CYCLE     &bl BL_INC       &bl BL_DEC       &trans                    &trans      &trans  &trans  &trans  &trans  &trans
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &trans                    &trans      &trans  &trans  &trans  &trans  &trans
&trans  &trans           &trans           &trans           &trans           &trans  &trans    &trans  &trans      &trans  &trans  &trans  &trans  &trans
                         &trans           &trans           &trans           &trans  &trans    &trans  &trans      &trans  &trans  &trans
            >;

            label = "BT";
        };
    };
};
